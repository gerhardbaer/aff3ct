--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -2,7 +2,7 @@
 # ------------------------------------------------------------------------------------------------------- CMAKE PROJECT
 # ---------------------------------------------------------------------------------------------------------------------
 
-cmake_minimum_required(VERSION 3.5)
+cmake_minimum_required(VERSION 3.16)
 cmake_policy(SET CMP0054 NEW)
 
 if(${CMAKE_VERSION} VERSION_EQUAL "3.14" OR ${CMAKE_VERSION} VERSION_GREATER "3.14")
@@ -235,6 +235,9 @@
     add_library(aff3ct-lib-obj OBJECT ${lib_source_files})
     set_target_properties(aff3ct-lib-obj PROPERTIES
                                          POSITION_INDEPENDENT_CODE ON) # set -fpic
+
+    target_precompile_headers(aff3ct-lib-obj PRIVATE [["aff3ct-simd.hpp"]])
+    target_precompile_headers(aff3ct-bin-obj REUSE_FROM aff3ct-lib-obj)
 endif()
 
 # Binary
--- /dev/null
+++ b/include/aff3ct-simd.hpp
@@ -0,0 +1,71 @@
+#ifdef AFF3CT_SIMD_all_impl
+#include "aff3ct-simd-undef.hpp"
+#endif
+
+#ifndef AFF3CT_SIMD_HPP
+#define AFF3CT_SIMD_HPP
+
+#undef MIPP_ISA
+#undef mipp
+#undef aff3ct
+
+#ifdef AFF3CT_SIMD_all_impl
+#pragma GCC push_options
+#endif
+
+#if defined(AFF3CT_SIMD_none)
+#define MIPP_ISA                0
+#define mipp                    mipp_none
+#define aff3ct                  aff3ct_none
+#elif defined(AFF3CT_SIMD_sse4)
+#define MIPP_ISA                MIPP_ISA_X86_64(2)
+#define mipp                    mipp_sse4
+#define aff3ct                  aff3ct_sse4
+#ifdef AFF3CT_SIMD_all_impl
+#pragma GCC target              ("sse4.2", "sse4.1", "ssse3", "sse3")
+#endif
+#elif defined(AFF3CT_SIMD_avx2)
+#define MIPP_ISA                MIPP_ISA_X86_64(3)
+#define mipp                    mipp_avx2
+#define aff3ct                  aff3ct_avx2
+#ifdef AFF3CT_SIMD_all_impl
+#pragma GCC target              ("avx2", "avx", "fma")
+#endif
+#elif defined(AFF3CT_SIMD_avx512)
+#define MIPP_ISA                MIPP_ISA_X86_64(4)
+#define mipp                    mipp_avx512
+#define aff3ct                  aff3ct_avx512
+#ifdef AFF3CT_SIMD_all_impl
+#pragma GCC target              ("avx512vl", "avx512dq", "avx512bw")
+#endif
+#elif defined(AFF3CT_SIMD_all)
+#define AFF3CT_SIMD_all_impl
+
+#if defined(__x86_64__)
+#define AFF3CT_SIMD_sse4
+#include "aff3ct-simd.hpp"
+#define AFF3CT_SIMD_avx2
+#include "aff3ct-simd.hpp"
+#define AFF3CT_SIMD_avx512
+#include "aff3ct-simd.hpp"
+
+#undef AFF3CT_SIMD_all_impl
+#endif
+#else
+#error "AFF3CT: undefined SIMD target"
+#endif
+
+#include "aff3ct.hpp"
+
+#ifdef AFF3CT_SIMD_all_impl
+#undef AFF3CT_SIMD_sse4
+#undef AFF3CT_SIMD_avx2
+#undef AFF3CT_SIMD_avx512
+
+#pragma GCC pop_options
+
+#undef MIPP_ISA
+#undef mipp
+#undef aff3ct
+#endif
+#endif /* AFF3CT_SIMD_HPP */
--- a/lib/MIPP/src/mipp.h
+++ b/lib/MIPP/src/mipp.h
@@ -34,6 +34,64 @@
 
 #define MIPP
 
+#ifndef MIPP_ISA
+#define MIPP_ISA 0
+#endif
+
+#define MIPP_ISA_X86_64(ver) \
+    (0x0100 | ((ver) & 0xff))
+#define MIPP_ISA_X86_64_PREREQ(min_ver) \
+    (((MIPP_ISA & 0xff00) == MIPP_ISA_X86_64(0)) && ((MIPP_ISA & 0xff) >= (min_ver)))
+
+#if defined(__i386__) || defined(__x86_64__)
+#include <x86intrin.h>
+#endif
+
+#if MIPP_ISA_X86_64_PREREQ(2)
+#ifndef __SSE4_2__
+#define __SSE4_2__              1
+#endif
+#ifndef __SSE4_1__
+#define __SSE4_1__              1
+#endif
+#ifndef __SSSE3__
+#define __SSSE3__               1
+#endif
+#ifndef __SSE3__
+#define __SSE3__                1
+#endif
+#endif /* x86-64-v2 ISA */
+
+#if MIPP_ISA_X86_64_PREREQ(3)
+#ifndef __AVX2__
+#define __AVX2__                1
+#endif
+#ifndef __AVX__
+#define __AVX__                 1
+#endif
+#ifndef __FMA__
+#define __FMA__                 1
+#endif
+#endif /* x86-64-v3 ISA */
+
+#if MIPP_ISA_X86_64_PREREQ(4)
+#ifndef __AVX512VL__
+#define __AVX512VL__            1
+#endif
+#ifndef __AVX512DQ__
+#define __AVX512DQ__            1
+#endif
+#ifndef __AVX512CD__
+#define __AVX512CD__            1
+#endif
+#ifndef __AVX512BW__
+#define __AVX512BW__            1
+#endif
+#ifndef __AVX512F__
+#define __AVX512F__             1
+#endif
+#endif /* x86-64-v4 ISA */
+
 #ifndef MIPP_NO_INTRINSICS
 #if defined(__ARM_FEATURE_SVE)
 #include <arm_sve.h>
--- /dev/null
+++ b/include/aff3ct-simd-undef.hpp
@@ -0,0 +1,454 @@
+#undef AFF3CT_HPP
+#undef AFF3CT_SIMD_HPP
+
+#undef MY_INTRINSICS_PLUS_PLUS_H_
+#undef MIPP_SCALAR_OP_H_
+#undef SSE_MATHFUN_H_
+#undef AVX_MATHFUN_H_
+#undef AVX512_MATHFUN_H_
+#undef NEON_MATHFUN_H_
+
+#undef MIPP_INSTR_VERSION
+#undef MIPP_LANES
+#undef MIPP_REGISTER_SIZE
+#undef MIPP_REQUIRED_ALIGNMENT
+
+#undef ALIST_HPP_
+#undef API_POLAR_DYNAMIC_INTER_8BIT_BITPACKING_HPP_
+#undef API_POLAR_DYNAMIC_INTER_HPP_
+#undef API_POLAR_DYNAMIC_INTRA_HPP_
+#undef API_POLAR_DYNAMIC_SEQ_HPP_
+#undef API_POLAR_HPP_
+#undef API_POLAR_STATIC_INTER_8BIT_BITPACKING_HPP_
+#undef API_POLAR_STATIC_INTER_HPP_
+#undef API_POLAR_STATIC_INTRA_16BIT_HPP_
+#undef API_POLAR_STATIC_INTRA_32BIT_HPP_
+#undef API_POLAR_STATIC_INTRA_8BIT_HPP_
+#undef API_POLAR_STATIC_SEQ_HPP_
+#undef AUTO_CLONED_UNIQUE_PTR_HPP__
+#undef BCH_POLYNOMIAL_GENERATOR_HPP
+#undef BINARY_NODE_HPP_
+#undef BINARY_TREE_HPP_
+#undef BINARY_TREE_METRIC_HPP_
+#undef BITWISE_DIFF_H__
+#undef BOOLEAN_DIFF_H__
+#undef CALLBACK_HPP__
+#undef CHANNEL_AWGN_LLR_HPP_
+#undef CHANNEL_BEC_HPP_
+#undef CHANNEL_BSC_HPP_
+#undef CHANNEL_HPP_
+#undef CHANNEL_OPTICAL_HPP_
+#undef CHANNEL_RAYLEIGH_LLR_HPP_
+#undef CHANNEL_RAYLEIGH_LLR_USER_HPP_
+#undef CHANNELS_NO_HPP_
+#undef CHANNEL_USER_ADD_HPP_
+#undef CHANNEL_USER_BE_HPP_
+#undef CHANNEL_USER_BS_HPP_
+#undef CHANNEL_USER_HPP_
+#undef CODEBOOK_HPP_
+#undef CODEC_BCH_HPP_
+#undef CODEC_HIHO_HPP_
+#undef CODEC_HPP_
+#undef CODEC_LDPC_HPP_
+#undef CODEC_POLAR_HPP_
+#undef CODEC_POLAR_MK_HPP_
+#undef CODEC_RA_HPP_
+#undef CODEC_REPETITION_HPP_
+#undef CODEC_RSC_DB_HPP_
+#undef CODEC_RSC_HPP_
+#undef CODEC_RS_HPP_
+#undef CODEC_SIHO_HPP_
+#undef CODEC_SISO_HPP_
+#undef CODEC_TURBO_DB_HPP_
+#undef CODEC_TURBO_HPP_
+#undef CODEC_TURBO_PRODUCT_HPP_
+#undef CODEC_UNCODED_HPP_
+#undef COMMAND_PARSER_HPP
+#undef CONSTELLATION_HPP__
+#undef CONSTELLATION_PAM_HPP__
+#undef CONSTELLATION_PSK_HPP__
+#undef CONSTELLATION_QAM_HPP__
+#undef CONSTELLATION_USER_HPP__
+#undef COSET_BIT_HPP_
+#undef COSET_HPP_
+#undef COSET_REAL_HPP_
+#undef CPM_BCJR_HPP_
+#undef CPM_PARAMETERS_HPP_
+#undef CRC_CHECKER_DB_HPP
+#undef CRC_CHECKER_HPP
+#undef CRC_HPP_
+#undef CRC_NO_HPP_
+#undef CRC_POLYNOMIAL_FAST_HPP_
+#undef CRC_POLYNOMIAL_HPP_
+#undef CRC_POLYNOMIAL_INTER_HPP_
+#undef DECODER_BCH
+#undef DECODER_BCH_FAST
+#undef DECODER_BCH_GENIUS
+#undef DECODER_BCH_STD
+#undef Decoder_chase_pyndiah_fast_HPP_
+#undef DECODER_CHASE_PYNDIAH_HPP_
+#undef DECODER_CHASE_STD_HPP_
+#undef DECODER_HIHO_HPP_
+#undef DECODER_HPP_
+#undef DECODER_LDPC_BIT_FLIPPING_HARD_HPP_
+#undef DECODER_LDPC_BIT_FLIPPING_HPP_
+#undef DECODER_LDPC_BIT_FLIPPING_OMWBF_HPP_
+#undef DECODER_LDPC_BP_FLOODING_GALLAGER_A_HPP_
+#undef DECODER_LDPC_BP_FLOODING_GALLAGER_B_HPP_
+#undef DECODER_LDPC_BP_FLOODING_GALLAGER_E_HPP_
+#undef DECODER_LDPC_BP_FLOODING_HPP_
+#undef DECODER_LDPC_BP_FLOODING_INTER_HPP_
+#undef DECODER_LDPC_BP_FLOODING_SPA_HPP_
+#undef DECODER_LDPC_BP_HORIZONTAL_LAYERED_HPP_
+#undef DECODER_LDPC_BP_HORIZONTAL_LAYERED_INTER_HPP_
+#undef DECODER_LDPC_BP_HORIZONTAL_LAYERED_ONMS_INTER_HPP_
+#undef DECODER_LDPC_BP_HPP_
+#undef DECODER_LDPC_BP_PEELING_HPP
+#undef DECODER_LDPC_BP_VERTICAL_LAYERED_HPP_
+#undef DECODER_LDPC_BP_VERTICAL_LAYERED_INTER_HPP_
+#undef DECODER_LDPC_PROBABILISTIC_PARALLEL_BIT_FLIPPING_HPP_
+#undef DECODER_MAXIMUM_LIKELIHOOD_NAIVE_HPP_
+#undef DECODER_MAXIMUM_LIKELIHOOD_STD_HPP_
+#undef DECODER_MAXIMUM_LIKELIHOO_HPP_
+#undef DECODER_NO_HPP_
+#undef DECODER_POLAR_ASCL_FAST_SYS_CA
+#undef DECODER_POLAR_ASCL_MEM_FAST_SYS_CA
+#undef DECODER_POLAR_FUNCTIONS_H
+#undef DECODER_POLAR_MK_ASCL_NAIVE_CA
+#undef DECODER_POLAR_MK_ASCL_NAIVE_CA_SYS
+#undef DECODER_POLAR_MK_SCL_NAIVE
+#undef DECODER_POLAR_MK_SCL_NAIVE_CA_
+#undef DECODER_POLAR_MK_SCL_NAIVE_CA_SYS_
+#undef DECODER_POLAR_MK_SCL_NAIVE_SYS
+#undef DECODER_POLAR_MK_SC_NAIVE_
+#undef DECODER_POLAR_MK_SC_NAIVE_SYS_
+#undef DECODER_POLAR_SCAN_NAIVE_H_
+#undef DECODER_POLAR_SCAN_NAIVE_SYS_
+#undef DECODER_POLAR_SC_FAST_SYS_
+#undef DECODER_POLAR_SCF_NAIVE_
+#undef DECODER_POLAR_SCF_NAIVE_SYS_
+#undef DECODER_POLAR_SCL_FAST_SYS
+#undef DECODER_POLAR_SCL_FAST_SYS_CA
+#undef DECODER_POLAR_SCL_MEM_FAST_SYS
+#undef DECODER_POLAR_SCL_MEM_FAST_SYS_CA
+#undef DECODER_POLAR_SCL_NAIVE
+#undef DECODER_POLAR_SCL_NAIVE_CA_
+#undef DECODER_POLAR_SCL_NAIVE_CA_SYS_
+#undef DECODER_POLAR_SCL_NAIVE_SYS
+#undef DECODER_POLAR_SC_NAIVE_
+#undef DECODER_POLAR_SC_NAIVE_SYS_
+#undef DECODER_RA
+#undef DECODER_REPETITION
+#undef DECODER_REPETITION_FAST
+#undef DECODER_REPETITION_STD
+#undef DECODER_RS
+#undef DECODER_RSC_BCJR_HPP_
+#undef DECODER_RSC_BCJR_INTER_FAST_HPP_
+#undef DECODER_RSC_BCJR_INTER_HPP_
+#undef DECODER_RSC_BCJR_INTER_INTRA_FAST_X2_AVX_HPP_
+#undef DECODER_RSC_BCJR_INTER_INTRA_FAST_X2_SSE_HPP_
+#undef DECODER_RSC_BCJR_INTER_INTRA_FAST_X4_AVX_HPP_
+#undef DECODER_RSC_BCJR_INTER_INTRA_HPP_
+#undef DECODER_RSC_BCJR_INTER_STD_HPP_
+#undef DECODER_RSC_BCJR_INTER_VERY_FAST_HPP_
+#undef DECODER_RSC_BCJR_INTRA_FAST_HPP_
+#undef DECODER_RSC_BCJR_INTRA_HPP_
+#undef DECODER_RSC_BCJR_INTRA_STD_HPP_
+#undef DECODER_RSC_BCJR_SEQ_FAST_HPP_
+#undef DECODER_RSC_BCJR_SEQ_GENERIC_HPP_
+#undef DECODER_RSC_BCJR_SEQ_HPP_
+#undef DECODER_RSC_BCJR_SEQ_SCAN_HPP_
+#undef DECODER_RSC_BCJR_SEQ_VERY_FAST_HPP_
+#undef DECODER_RSC_BCJR_STD_GENERIC_SEQ_HPP_
+#undef DECODER_RSC_BCJR_STD_GENERIC_SEQ_JSON_HPP_
+#undef DECODER_RSC_BCJR_STD_SEQ_HPP_
+#undef DECODER_RSC_DB_BCJR_DVB_RCS1_HPP_
+#undef DECODER_RSC_DB_BCJR_DVB_RCS2_HPP_
+#undef DECODER_RSC_DB_BCJR_GENERIC_HPP_
+#undef DECODER_RSC_DB_BCJR_HPP_
+#undef DECODER_SIHO_HPP_
+#undef DECODER_SISO_HPP_
+#undef DECODER_TURBO_DB_HPP
+#undef DECODER_TURBO_FAST_SYS_
+#undef DECODER_TURBO_HPP_
+#undef DECODER_TURBO_NAIVE_HPP
+#undef DECODER_TURBO_PRODUCT_HPP_
+#undef DISTANCE_H__
+#undef DISTRIBUTION_HPP__
+#undef DISTRIBUTIONS_HPP
+#undef DRAW_GENERATOR_HPP_
+#undef DUMPER_HPP_
+#undef DUMPER_REDUCTION_HPP_
+#undef DVBS2_CONSTANTS_16200_HPP_
+#undef DVBS2_CONSTANTS_64800_HPP_
+#undef DVBS2_CONSTANTS_HPP_
+#undef ENABLE_HARD_REP
+#undef ENABLE_HARD_REP2
+#undef ENABLE_HARD_REP4
+#undef ENCODER_AZCW_HPP_
+#undef ENCODER_BCH_HPP_
+#undef ENCODER_BCH_INTER_HPP_
+#undef ENCODER_COSET_HPP_
+#undef ENCODER_CPE_HPP_
+#undef ENCODER_CPE_RIMOLDI_HPP_
+#undef ENCODER_HPP_
+#undef ENCODER_LDPC_DVBS2_HPP_
+#undef ENCODER_LDPC_FROM_H_HPP_
+#undef ENCODER_LDPC_FROM_IRA_HPP_
+#undef ENCODER_LDPC_FROM_QC_HPP_
+#undef ENCODER_LDPC_HPP_
+#undef ENCODER_NO_HPP_
+#undef ENCODER_POLAR_HPP_
+#undef ENCODER_POLAR_MK_HPP_
+#undef ENCODER_POLAR_MK_SYS_HPP_
+#undef ENCODER_POLAR_SYS_HPP_
+#undef ENCODER_RA_HPP_
+#undef ENCODER_REPETITION_SYS_HPP_
+#undef ENCODER_RSC3_CPE_SYS_HPP_
+#undef ENCODER_RSC_DB_HPP_
+#undef ENCODER_RSC_GENERIC_JSON_SYS_HPP_
+#undef ENCODER_RSC_GENERIC_SYS_HPP_
+#undef ENCODER_RSC_SYS_HPP_
+#undef ENCODER_RS_HPP_
+#undef ENCODER_TURBO_DB_HPP_
+#undef ENCODER_TURBO_HPP_
+#undef ENCODER_TURBO_LEGACY_HPP_
+#undef ENCODER_TURBO_PRODUCT_HPP_
+#undef ENCODER_USER_HPP_
+#undef ERASED_PROBABILITY_HPP_
+#undef EVENT_GENERATOR_FAST_HPP
+#undef EVENT_GENERATOR_GSL_HPP
+#undef EVENT_GENERATOR_HPP
+#undef EVENT_GENERATOR_MKL_HPP
+#undef EVENT_GENERATOR_STD_HPP
+#undef EXTRACTOR_HPP_
+#undef EXTRACTOR_LDPC_HPP_
+#undef EXTRACTOR_POLAR_HPP_
+#undef EXTRACTOR_RSC_HPP_
+#undef EXTRACTOR_UNCODED_HPP_
+#undef FACTORY_CHANNEL_HPP
+#undef FACTORY_CODEC_BCH_HPP
+#undef FACTORY_CODEC_HIHO_HPP_
+#undef FACTORY_CODEC_HPP_
+#undef FACTORY_CODEC_LDPC_HPP
+#undef FACTORY_CODEC_POLAR_HPP
+#undef FACTORY_CODEC_POLAR_MK_HPP
+#undef FACTORY_CODEC_RA_HPP
+#undef FACTORY_CODEC_REPETITION_HPP
+#undef FACTORY_CODEC_RSC_DB_HPP
+#undef FACTORY_CODEC_RSC_HPP
+#undef FACTORY_CODEC_RS_HPP
+#undef FACTORY_CODEC_SIHO_HPP_
+#undef FACTORY_CODEC_SISO_HPP_
+#undef FACTORY_CODEC_TURBO_DB_HPP
+#undef FACTORY_CODEC_TURBO_HPP
+#undef FACTORY_CODEC_TURBO_PRODUCT_HPP
+#undef FACTORY_CODEC_UNCODED_HPP
+#undef FACTORY_COSET_HPP
+#undef FACTORY_CRC_HPP
+#undef FACTORY_DECODER_BCH_HPP
+#undef FACTORY_DECODER_HPP_
+#undef FACTORY_DECODER_LDPC_HPP
+#undef FACTORY_DECODER_NO_HPP
+#undef FACTORY_DECODER_POLAR_HPP
+#undef FACTORY_DECODER_POLAR_MK_HPP
+#undef FACTORY_DECODER_RA_HPP
+#undef FACTORY_DECODER_REPETITION_HPP
+#undef FACTORY_DECODER_RSC_DB_HPP
+#undef FACTORY_DECODER_RSC_HPP
+#undef FACTORY_DECODER_RS_HPP
+#undef FACTORY_DECODER_TURBO_DB_HPP
+#undef FACTORY_DECODER_TURBO_HPP
+#undef FACTORY_DECODER_TURBO_PRODUCT_HPP
+#undef FACTORY_ENCODER_BCH_HPP
+#undef FACTORY_ENCODER_HPP
+#undef FACTORY_ENCODER_LDPC_HPP
+#undef FACTORY_ENCODER_NO_HPP
+#undef FACTORY_ENCODER_POLAR_HPP
+#undef FACTORY_ENCODER_POLAR_MK_HPP
+#undef FACTORY_ENCODER_RA_HPP
+#undef FACTORY_ENCODER_REPETITION_HPP
+#undef FACTORY_ENCODER_RSC_DB_HPP
+#undef FACTORY_ENCODER_RSC_HPP
+#undef FACTORY_ENCODER_RS_HPP
+#undef FACTORY_ENCODER_TURBO_DB_HPP
+#undef FACTORY_ENCODER_TURBO_HPP
+#undef FACTORY_ENCODER_TURBO_PRODUCT_HPP
+#undef FACTORY_FLIP_AND_CHECK_DB_HPP
+#undef FACTORY_FLIP_AND_CHECK_HPP
+#undef FACTORY_FROZENBITS_GENERATOR_HPP
+#undef FACTORY_FROZENBITS_GENERATOR_MK_HPP
+#undef FACTORY_HPP
+#undef FACTORY_INTERLEAVER_CORE_HPP
+#undef FACTORY_INTERLEAVER_HPP
+#undef FACTORY_MODEM_HPP
+#undef FACTORY_MONITOR_BFER_HPP
+#undef FACTORY_MONITOR_EXIT_HPP
+#undef FACTORY_MONITOR_HPP
+#undef FACTORY_MONITOR_MI_HPP
+#undef FACTORY_NOISE_HPP
+#undef FACTORY_POLAR_CODE_HPP
+#undef FACTORY_PONCTURER_HPP_
+#undef FACTORY_PUNCTURER_LDPC_HPP
+#undef FACTORY_PUNCTURER_POLAR_HPP
+#undef FACTORY_PUNCTURER_TURBO_DB_HPP
+#undef FACTORY_PUNCTURER_TURBO_HPP
+#undef FACTORY_QUANTIZER_HPP
+#undef FACTORY_SCALING_FACTOR_HPP
+#undef FACTORY_SINK_HPP
+#undef FACTORY_SOURCE_HPP
+#undef FACTORY_TERMINAL_HPP_
+#undef FB_ASSERT_H
+#undef FB_EXTRACT_HPP
+#undef FLIP_AND_CHECK_DB_HPP
+#undef FLIP_AND_CHECK_HPP
+#undef FRAME_TRACE_HPP
+#undef FROZENBITS_GENERATOR_5G_HPP_
+#undef FROZENBITS_GENERATOR_BEC_HPP_
+#undef FROZENBITS_GENERATOR_FILE_HPP_
+#undef FROZENBITS_GENERATOR_GA_ARIKAN_HPP_
+#undef FROZENBITS_GENERATOR_GA_HPP_
+#undef FROZENBITS_GENERATOR_HPP_
+#undef FROZENBITS_GENERATOR_TV_HPP_
+#undef FULL_MATRIX_HPP_
+#undef FUNCTIONS_POLAR_INTER_8BIT_BITPACKING_H_
+#undef FUNCTIONS_POLAR_INTER_H_
+#undef FUNCTIONS_POLAR_INTER_INTRA_H_
+#undef FUNCTIONS_POLAR_INTRA_16BIT_H_
+#undef FUNCTIONS_POLAR_INTRA_32BIT_H_
+#undef FUNCTIONS_POLAR_INTRA_8BIT_H_
+#undef FUNCTIONS_POLAR_INTRA_H_
+#undef FUNCTIONS_POLAR_SEQ_H_
+#undef GALOIS_HPP
+#undef GAUSSIAN_NOISE_GENERATOR_FAST_HPP_
+#undef GAUSSIAN_NOISE_GENERATOR_GSL_HPP_
+#undef GAUSSIAN_NOISE_GENERATOR_HPP_
+#undef GAUSSIAN_NOISE_GENERATOR_MKL_HPP_
+#undef GAUSSIAN_NOISE_GENERATOR_STD_HPP_
+#undef GENERAL_UTILS_H_
+#undef GENERIC_NODE_HPP_
+#undef GENERIC_TREE_HPP_
+#undef GENERIC_TREE_METRIC_HPP_
+#undef HAMMING_DISTANCE_H_
+#undef HARD_DECIDE_H_
+#undef HEADER_HPP
+#undef HISTOGRAM_HPP__
+#undef Interface_get_set_frozen_bits_HPP__
+#undef INTERFACE_GET_SET_NOISE_HPP__
+#undef Interface_get_trellis_HPP__
+#undef INTERFACE_NOTIFY_NOISE_UPDATE_HPP__
+#undef INTERLEAVER_CORE_ARP_DVB1_HPP
+#undef INTERLEAVER_CORE_ARP_DVB2_HPP
+#undef INTERLEAVER_CORE_CCSDS_HPP
+#undef INTERLEAVER_CORE_COLUMN_ROW_HPP
+#undef INTERLEAVER_CORE_GOLDEN_HPP
+#undef INTERLEAVER_CORE_HPP_
+#undef INTERLEAVER_CORE_LTE_HPP
+#undef INTERLEAVER_CORE_NO_HPP
+#undef INTERLEAVER_CORE_RANDOM_COLUMN_HPP
+#undef INTERLEAVER_CORE_RANDOM_HPP
+#undef INTERLEAVER_CORE_ROW_COLUMN_HPP
+#undef INTERLEAVER_CORE_USER_HPP
+#undef INTERLEAVER_HPP_
+#undef INTERPOLATION_H_
+#undef LC_SORTER_HPP
+#undef LC_SORTER_SIMD_HPP
+#undef LDPC_MATRIX_HANDLER_HPP_
+#undef LDPC_SYNDROME_HPP_
+#undef MATRIX_H
+#undef MATRIX_HPP_
+#undef MATRIX_UTILS_H__
+#undef MAX_H
+#undef MODEM_BPSK_FAST_HPP_
+#undef MODEM_BPSK_HPP_
+#undef MODEM_CPM_HPP_
+#undef MODEM_GENERIC_FAST_HPP_
+#undef MODEM_GENERIC_HPP_
+#undef MODEM_HPP_
+#undef MODEM_OOK_AWGN_HPP_
+#undef MODEM_OOK_BEC_HPP_
+#undef MODEM_OOK_BSC_HPP_
+#undef MODEM_OOK_HPP_
+#undef MODEM_OOK_OPTICAL_HPP_
+#undef MODEM_OOK_OPTICAL_ROP_ESTIMATE_HPP_
+#undef MODEM_SCMA_FUNCTIONS_HPP
+#undef MODEM_SCMA_HPP_
+#undef MONITOR_BFER_HPP_
+#undef MONITOR_EXIT_HPP_
+#undef MONITOR_HPP_
+#undef MONITOR_MI_HPP_
+#undef MONITOR_REDUCTION_HPP_
+#undef MONITOR_REDUCTION_MPI_HPP_
+#undef MONITOR_REDUCTION_MPI_HXX_
+#undef MUTUAL_INFO_H__
+#undef NODES_PARSER_HPP
+#undef NOISE_HPP__
+#undef NOISE_UTILS_HPP__
+#undef NUMERICAL_INTEGRATION_H_
+#undef PATTERN_POLAR_INTERFACE_HPP_
+#undef PATTERN_POLAR_PARSER_HPP
+#undef PATTERN_POLAR_RATE_0_HPP_
+#undef PATTERN_POLAR_RATE_0_LEFT_HPP_
+#undef PATTERN_POLAR_RATE_1_HPP_
+#undef PATTERN_POLAR_REP_HPP_
+#undef PATTERN_POLAR_REP_LEFT_HPP_
+#undef PATTERN_POLAR_SPC_HPP_
+#undef PATTERN_POLAR_STANDARD_HPP_
+#undef POLAR_CODE_HPP_
+#undef POST_PROCESSING_SISO_HPP
+#undef PRNG_MT19937_HPP
+#undef PRNG_MT19937_SIMD_HPP
+#undef PUNCTURER_HPP_
+#undef PUNCTURER_LDPC_HPP_
+#undef PUNCTURER_NO_HPP_
+#undef PUNCTURER_POLAR_SHORTLAST_HPP_
+#undef PUNCTURER_TURBO_DB_HPP_
+#undef PUNCTURER_TURBO_HPP_
+#undef QC_HPP_
+#undef QUANTIZER_CUSTOM_HPP_
+#undef QUANTIZER_HPP_
+#undef QUANTIZER_NO_HPP_
+#undef QUANTIZER_POW2_FAST_HPP_
+#undef QUANTIZER_POW2_HPP_
+#undef RECEIVED_OPTICAL_POWER_HPP_
+#undef REORDERER_HPP_
+#undef Reporter_BFER_HPP_
+#undef Reporter_EXIT_HPP_
+#undef REPORTER_MI_HPP_
+#undef REPORTER_MONITOR_HPP_
+#undef REPORTER_NOISE_HPP_
+#undef REPORTER_THROUGHPUT_HPP_
+#undef RS_POLYNOMIAL_GENERATOR_HPP
+#undef SCALING_FACTOR_ADAPTIVE_HPP
+#undef SCALING_FACTOR_ARRAY_HPP
+#undef SCALING_FACTOR_CONSTANT_HPP
+#undef SCALING_FACTOR_HPP
+#undef SCALING_FACTOR_SEQ_HPP
+#undef SCALING_FACTOR_VEC_HPP
+#undef SELF_CORRECTED_HPP
+#undef SIGMA_HPP_
+#undef SOURCE_RANDOM_FAST_HPP_
+#undef SPARSE_MATRIX_HPP_
+#undef TRANSPOSE_SELECTOR_H
+#undef TYPES_H_
+#undef UPDATE_RULE_AMS_HPP
+#undef UPDATE_RULE_AMS_SIMD_HPP
+#undef UPDATE_RULE_LSPA_HPP
+#undef UPDATE_RULE_LSPA_SIMD_HPP
+#undef UPDATE_RULE_MS_HPP
+#undef UPDATE_RULE_MS_SIMD_HPP
+#undef UPDATE_RULE_NMS_HPP
+#undef UPDATE_RULE_NMS_SIMD_HPP
+#undef UPDATE_RULE_OMS_HPP
+#undef UPDATE_RULE_OMS_SIMD_HPP
+#undef UPDATE_RULE_SPA_HPP
+#undef UPDATE_RULE_SPA_SIMD_HPP
+#undef User_pdf_noise_generator_fast_HPP_
+#undef User_pdf_noise_generator_GSL_HPP_
+#undef USER_PDF_NOISE_GENERATOR_HPP
+#undef User_pdf_noise_generator_MKL_HPP_
+#undef USER_PDF_NOISE_GENERATOR_STD_HPP_
+#undef VECTOR_2D_HPP_
+#undef VECTOR_3D_HPP_
+#undef VECTOR_4D_HPP_
+#undef VERSION_H_
--- /dev/null
+++ b/include/aff3ct-simd-all.hpp
@@ -0,0 +1,7 @@
+#ifndef AFF3CT_SIMD_ALL_HPP
+#define AFF3CT_SIMD_ALL_HPP
+
+#define AFF3CT_SIMD_all 1
+#include "aff3ct-simd.hpp"
+
+#endif /* AFF3CT_SIMD_ALL_HPP */
