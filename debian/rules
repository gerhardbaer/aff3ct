#!/usr/bin/make -f

AFF3CT_VERSION = 3.0.2+git
AFF3CT_SOVERSION = 0
export AFF3CT_OVERRIDE_VERSION = v$(AFF3CT_VERSION)
export AFF3CT_CORE_OVERRIDE_VERSION = v0.0.0+git

builddir	:= obj-$(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
destdir		:= debian/tmp

njobs_parallel	:= $(filter parallel=%,$(DEB_BUILD_OPTIONS))
NJOBS		:= $(firstword $(patsubst parallel=%,%,$(njobs_parallel)))

SIMD_TARGETS		= none sse4 avx2 avx512
SIMD_TARGETS_DEPS	= $(foreach simd,$(SIMD_TARGETS),$(builddir)/$(simd).d)
SIMD_TARGETS_sse4	= -march=x86-64-v2
SIMD_TARGETS_avx2	= -march=x86-64-v3
SIMD_TARGETS_avx512	= -march=x86-64-v4
SIMD_COMPONENTS_	= library simulator # for all SIMD targets
SIMD_COMPONENTS_none	= configuration references documentation
SIMD_COMPONENTS_none	+= headers subproject-library

TEST_TARGETS		=
TEST_TARGETS		+= BCH
TEST_TARGETS		+= LDPC
TEST_TARGETS		+= POLAR POLAR_MK
TEST_TARGETS		+= RA
TEST_TARGETS		+= REP
TEST_TARGETS		+= RS RSC RSC_DB
TEST_TARGETS		+= TURBO TURBO_DB TURBO_PROD
TEST_TARGETS		+= UNCODED
TEST_TARGETS_DEPS	= $(foreach test,$(TEST_TARGETS),\
	$(SIMD_TARGETS_DEPS:%.d=%/tests/$(test).d))

TEST_ARGS_LDPC		= --max-snr-time 10
TEST_ARGS_TURBO_PROD	= --max-snr-time 30


%:
	dh  $@ --parallel --buildsystem=cmake

override_dh_auto_configure: $(SIMD_TARGETS_DEPS:%.d=%.configured)
$(builddir)/%.configured:
	CPPFLAGS="$(CPPFLAGS) -DAFF3CT_SIMD_$(*F)" \
	CFLAGS="$(CFLAGS) $(SIMD_TARGETS_$(*F))" \
	CXXFLAGS="$(CXXFLAGS) $(SIMD_TARGETS_$(*F))" \
	dh_auto_configure -B"$(builddir)/$(*F)" -- \
		-DCMAKE_BUILD_TYPE=Release \
		-DCLI_COMPILE_SHARED_LIB=ON \
		-DCLI_COMPILE_STATIC_LIB=OFF \
		-DAFF3CT_CORE_OVERRIDE_VERSION="$(AFF3CT_CORE_OVERRIDE_VERSION)" \
		-DAFF3CT_CORE_COMPILE_SHARED_LIB=ON \
		-DAFF3CT_CORE_COMPILE_STATIC_LIB=OFF \
		-DAFF3CT_OVERRIDE_VERSION="$(AFF3CT_OVERRIDE_VERSION)" \
		-DAFF3CT_OVERRIDE_SOVERSION=$(AFF3CT_SOVERSION) \
		-DAFF3CT_OVERRIDE_SUFFIX=$(*F) \
		-DAFF3CT_EXT_STRINGS=OFF \
		-DAFF3CT_COMPILE_SHARED_LIB=ON \
		-DAFF3CT_COMPILE_STATIC_LIB=OFF \
		&& touch $@

override_dh_auto_build: $(SIMD_TARGETS_DEPS:%.d=%.built)
$(builddir)/%.built:
	dh_auto_build -B"$(builddir)/$(*F)" --parallel \
		&& touch $@

override_dh_auto_install: $(SIMD_TARGETS_DEPS:%.d=%.installed)
$(builddir)/%.installed:
	for component in $(SIMD_COMPONENTS_$(filter none,$(*F))); do	\
	(cd "$(builddir)/$(*F)" && cmake				\
		-DCMAKE_INSTALL_COMPONENT=$$component			\
		-DCMAKE_INSTALL_PREFIX="$(CURDIR)/$(destdir)/usr"	\
		-P cmake_install.cmake);				\
	done	&& touch $@

override_dh_auto_test: $(TEST_TARGETS_DEPS:%.d=%.tested)
$(builddir)/%.tested: $(SIMD_TARGETS_DEPS:%.d=%/bin/aff3ct-test.sh)
	@mkdir -p $(@D)
ifeq (,$(filter nocheck,$(DEB_BUILD_OPTIONS)))
	$(@D)/../bin/aff3ct-test.sh --version || SKIP=/bin/true &&	\
	$$SKIP python3 ./ci/test-regression.py				\
		--refs-path $(CURDIR)/refs/$(*F)			\
		--results-path $(CURDIR)/$(@D)/$(*F)			\
		--build-path $(CURDIR)/$(@D)/..				\
		--binary-path bin/aff3ct-test.sh			\
		--max-snr-time 5 --sensibility 2.5 --weak-rate 0.9	\
		--n-threads $(NJOBS) $(TEST_ARGS_$(*F))			\
		--verbose 1						\
		&& touch $@ || :
endif

# Build documentation (HTML)
sphinx_prefix	= $(CURDIR)/tools/sphinx
sphinx_build	= $(sphinx_prefix)/bin/sphinx-build

doc/build/html/index.html: $(sphinx_build)
	. $(sphinx_prefix)/bin/activate && make -C doc html
$(sphinx_build): $(sphinx_prefix)/bin/activate
	. $(sphinx_prefix)/bin/activate && pip install -r doc/requirements.txt
$(sphinx_prefix)/bin/activate:
	python3 -m venv $(sphinx_prefix)

# Run regression tests
test-regression: $(TEST_TARGETS_DEPS:%.d=%.tested)
$(builddir)/%/bin/aff3ct-test.sh: $(builddir)/%
	aff3ct_bin=$(CURDIR)/$(@D)/aff3ct-$(<F)-$(AFF3CT_VERSION) ;	\
	grep -q " $(<F)" /proc/cpuinfo					\
		|| RUNTIME=/bin/false ;					\
	[ "$(<F)" = "none" ]						\
		&& RUNTIME=/bin/false ;					\
	echo "#!/bin/bash"					 > $@ ;	\
	echo "exec $$RUNTIME $$aff3ct_bin" '$${1+"$$@"}'	>> $@
	chmod +x $@
